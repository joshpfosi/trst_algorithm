#!/bin/sh

set -e    # halt on first error

link=all  # link all binaries by default
linked=no # track whether we linked

case $1 in  
  -nolink) link=none ; shift ;;  # don't link
  -link)   link="$2" ; shift ; shift ;;  # link only one binary
esac

# these flags max out warnings and debug info
FLAGS="-g -Wall -Wextra -Werror -Wfatal-errors -std=c99 -pedantic"

case $# in
  0) set *.c ;; # if no args are given, compile all .c files
esac

# compile each argument to a .o file
for cfile 
do
  gcc $FLAGS $CFLAGS -c $cfile
done

case $link in
  all|trst) gcc $FLAGS -o trst *.o
              linked=yes ;;
esac

rm -rf *.o  # make sure no object files are left hanging around

# error if asked to link something we didn't recognize
if [ $linked = no ]; then
  case $link in  # if the -link option makes no sense, complain 
    none) ;; # OK, do nothing
    *) echo "`basename $0`: don't know how to link $link" 1>&2 ; exit 1 ;;
  esac
fi
